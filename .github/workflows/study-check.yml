name: Study Check Bot
on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  issues: write
  pull-requests: write
  contents: read

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check user's study file
        uses: actions/github-script@v6
        with:
          script: |
            const userMapping = {
              'JANGSEYEONG': 'seyeong',
              'sooyoung159': 'sooyoung',
              'kamja44': 'hyeongho',
              'youngme92': 'youngmo'
            };

            const githubUser = context.payload.pull_request.user.login;
            const expectedFileName = userMapping[githubUser];

            if (!expectedFileName) {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `❓ @${githubUser}님은 매핑 테이블에 등록되지 않은 사용자입니다. 관리자에게 문의해주세요!`
              });
              return;
            }

            // PR에서 변경된 파일들 확인
            const files = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            // 해당 사용자의 마크다운 파일이 있는지 체크
            const userFile = files.data.find(file => 
              file.filename.includes(`${expectedFileName}.md`) && 
              (file.status === 'added' || file.status === 'modified')
            );

            if (userFile) {
              // 파일 내용 길이 체크
              const fileContent = await github.rest.repos.getContent({
                owner: context.repo.owner,
                repo: context.repo.repo,
                path: userFile.filename,
                ref: context.payload.pull_request.head.sha
              });
              
              const contentLength = Buffer.from(fileContent.data.content, 'base64').toString().length;
              
              let message = `🎉 @${githubUser}님 (${expectedFileName}.md) 학습 파일 제출 완료! 📚✨`;
              
              if (contentLength < 100) {
                message += `\n\n💡 참고: 파일 내용이 조금 짧은 것 같아요. 더 자세한 정리가 있으면 좋겠어요! (현재: ${contentLength}자)`;
              } else {
                message += `\n\n👍 충분한 학습 내용이 작성되었네요! (${contentLength}자)`;
              }
              
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: message
              });
            } else {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `❌ @${githubUser}님의 학습 파일을 찾을 수 없습니다!\n\n📝 \`${expectedFileName}.md\` 파일을 해당 주차 폴더에 추가해주세요.`
              });
            }
